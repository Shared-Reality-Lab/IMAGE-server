services:
# start - common services
  orchestrator:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-orchestrator:${REGISTRY_TAG}
    restart: unless-stopped
    environment:
      - PARALLEL_PREPROCESSORS=ON
      - STORE_IMAGE_DATA=ON
      - MEMCACHE_SERVERS=memcached:11211
    env_file:
      - ./config/express-common.env
    group_add:
      # This should be set in an environment variable or .env
      - ${DOCKER_GID}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - user-logs:/var/log/IMAGE

  memcached:
    profiles: [production, test, default]
    image: 'memcached:1.6'
    # cache memory size - 4GB
    command: -m 4096

  espnet-tts:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-service-espnet-tts:${REGISTRY_TAG}
    restart: unless-stopped
    environment:
      - TORCH_DEVICE=cuda
    ports:
      - "8001:80"
    labels:
      ca.mcgill.a11y.image.cacheTimeout: 3600
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu", "utility", "compute"]

  espnet-tts-fr:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-service-espnet-tts-fr:${REGISTRY_TAG}
    restart: unless-stopped
    environment:
      - TORCH_DEVICE=cuda
    labels:
      ca.mcgill.a11y.image.cacheTimeout: 3600
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: ["gpu", "compute", "utility"]

  multilang-support:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-service-translation:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.cacheTimeout: 3600
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: ["gpu", "compute", "utility"]

  autour-preprocessor:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-autour:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/maps.env
    labels:
      ca.mcgill.a11y.image.preprocessor: 1
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600


  content-categoriser:
      profiles: [production, test, default]
      image: ghcr.io/shared-reality-lab/image-preprocessor-content-categoriser:${REGISTRY_TAG}
      restart: unless-stopped
      labels:
        ca.mcgill.a11y.image.preprocessor: 1
        ca.mcgill.a11y.image.port: 5000
        ca.mcgill.a11y.image.cacheTimeout: 3600
      env_file:
        ./config/ollama.env


  graphic-caption:
      profiles: [production, test, default]
      image: ghcr.io/shared-reality-lab/image-preprocessor-graphic-caption:${REGISTRY_TAG}
      restart: unless-stopped
      labels:
        ca.mcgill.a11y.image.preprocessor: 1
        ca.mcgill.a11y.image.port: 5000
        ca.mcgill.a11y.image.cacheTimeout: 3600
      env_file:
        ./config/ollama.env

  text-followup:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-text-followup:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.preprocessor: 1
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 0
      ca.mcgill.a11y.image.route: "followup"
    env_file:
      ./config/ollama.env

  graphic-tagger:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-graphic-tagger:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/azure-api.env
    labels:
      ca.mcgill.a11y.image.preprocessor: 2
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600

  object-detection:
    profiles: [production, default, test]
    image: ghcr.io/shared-reality-lab/image-preprocessor-object-detection-v8:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.preprocessor: 3
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu", "utility", "compute"]

  object-grouping:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-grouping:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.preprocessor: 4
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600

  openstreetmap:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-openstreetmap:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/maps.env
    labels:
      ca.mcgill.a11y.image.preprocessor: 3
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600


  object-sorting:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-sorting:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.preprocessor: 5
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600


  semantic-segmentation:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-mmsemantic-segmentation:${REGISTRY_TAG}
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu", "utility", "compute"]
    labels:
      ca.mcgill.a11y.image.preprocessor: 3
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600

  supercollider:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-service-supercollider:${REGISTRY_TAG}
    command: sclang -D ./loader.scd
    restart: unless-stopped
    volumes:
      - sc-store:/tmp/sc-store
    deploy:
        replicas: 2

  photo-audio-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-photo-audio:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/express-common.env
    labels:
      ca.mcgill.a11y.image.handler: enable
    volumes:
      - sc-store:/tmp/sc-store

  autour-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-autour:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/express-common.env
    labels:
      ca.mcgill.a11y.image.handler: enable
    volumes:
      - sc-store:/tmp/sc-store

  photo-audio-haptics-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-photo-audio-haptics:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/express-common.env
    labels:
      ca.mcgill.a11y.image.handler: enable
    volumes:
      - sc-store:/tmp/sc-store

  high-charts-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-high-charts:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/express-common.env
    labels:
      ca.mcgill.a11y.image.handler: enable
    volumes:
      - sc-store:/tmp/sc-store

  svg-od-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-svg-od:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.handler: enable

  svg-semantic-seg-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-svg-semantic-seg:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.handler: enable

  depth-map-generator:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-depth-map-generator:${REGISTRY_TAG}
    restart: unless-stopped
    deploy:
      resources:
        reservations:
            devices:
            - driver: nvidia
              capabilities: ["gpu", "utility", "compute"]
    labels:
        ca.mcgill.a11y.image.preprocessor: 3
        ca.mcgill.a11y.image.port: 5000
        ca.mcgill.a11y.image.cacheTimeout: 3600

  svg-depth-map:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-svg-depth-map:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.handler: enable

  nominatim-preprocessor:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-nominatim:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
        - ./config/express-common.env
    labels:
        ca.mcgill.a11y.image.preprocessor: 2
        ca.mcgill.a11y.image.cacheTimeout: 3600

  photo-tactile-svg-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-photo-tactile-svg:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.handler: enable

  map-tactile-svg-handler:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-handler-map-tactile-svg:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.handler: enable

# end - common services

# start - unicorn exclusive services

  motd-handler:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-handler-motd:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/express-common.env
    environment:
      - MOTD=Hello, world!
    labels:
      ca.mcgill.a11y.image.handler: enable

  hello-haptics-handler:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-handler-hello-haptics:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/express-common.env
    labels:
      ca.mcgill.a11y.image.handler: enable

  # For environment setup refer to https://github.com/Shared-Reality-Lab/IMAGE-server/tree/main/preprocessors/ocr
  ocr-clouds-preprocessor:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-ocr-clouds:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
      - ./config/apis-and-selection.env
    labels:
      ca.mcgill.a11y.image.preprocessor: 4
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600

  object-depth-calculator:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-object-depth-calculator:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.preprocessor: 4
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600

  line-charts:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-line-charts:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.preprocessor: 1
      ca.mcgill.a11y.image.port: 5000
      ca.mcgill.a11y.image.cacheTimeout: 3600

  action-recognition:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-action-recognition:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.preprocessor: 4
        ca.mcgill.a11y.image.port: 5000
        ca.mcgill.a11y.image.cacheTimeout: 3600
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu", "utility", "compute"]

  ocr-handler:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-handler-ocr:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
      ca.mcgill.a11y.image.handler: enable

  osm-streets-handler:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-handler-osm-streets:${REGISTRY_TAG}
    restart: unless-stopped
    env_file:
        - ./config/express-common.env
    depends_on:
        - supercollider
        - espnet-tts
    labels:
        ca.mcgill.a11y.image.handler: enable
    volumes:
        - sc-store:/tmp/sc-store

  svg-open-street-map-handler:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-handler-svg-open-street-map:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.handler: enable
        ca.mcgill.a11y.image.port: 5000

  collage-detector-preprocessor:
    profiles: [production, test, default]
    image: ghcr.io/shared-reality-lab/image-preprocessor-collage-detector:${REGISTRY_TAG}
    restart: unless-stopped
    labels:
        ca.mcgill.a11y.image.preprocessor: 1
        ca.mcgill.a11y.image.port: 5000
        ca.mcgill.a11y.image.cacheTimeout: 3600

  svg-action-recognition-handler:
    profiles: [test, default]
    image: ghcr.io/shared-reality-lab/image-handler-svg-action-recognition:${REGISTRY_TAG}
    labels:
        ca.mcgill.a11y.image.handler: enable
 
  monarch-link-app:
    profiles: [test, default]
    image: "ghcr.io/shared-reality-lab/image-service-monarch-link-app:${REGISTRY_TAG}"
    restart: unless-stopped
    networks:
      - traefik
# end - unicorn exclusive services        
volumes:
  sc-store:
  user-logs:
  website-logs:
# https://docs.docker.com/compose/networking/
networks:
# start - reverse proxy setup
# traefik is a reverse proxy used, any other reverse proxy (nginx, HAProxy) can be used as well  
# following section is not required if the server is hosted in another way
  traefik:
    external: true
    name: traefik
# end - reverse proxy setup
  default:
    name: image
