version: "3"

services:
    receiver:
        build:
            context: ./receiver
            dockerfile: Dockerfile
        image: "receiver:latest"
        env_file:
            - ./config/express-common.env
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    supercollider:
        build:
            context: ./supercollider-images/supercollider-service
            dockerfile: Dockerfile
        image: "supercollider-service:latest"
        command: sclang -D ./example.scd
        volumes:
            - sc-store:/tmp/sc-store
    espnet-tts:
        build:
            context: ./espnet
            dockerfile: Dockerfile
        image: "espnet-tts:latest"
        environment:
            - TORCH_DEVICE=cuda
        deploy:
            resources:
                reservations:
                    devices:
                    - driver: nvidia
                      capabilities: ["gpu", "utility", "compute"]
    hello-preprocessor:
        build:
            context: ./hello-preprocessor
            dockerfile: Dockerfile
        image: "hello-preprocessor:latest"
        env_file:
            - ./config/express-common.env
        labels:
            ca.mcgill.cim.bach.atp.preprocessor: 1
            ca.mcgill.cim.bach.atp.port: 8080
    hello-handler:
        build:
            context: ./hello-handler
            dockerfile: Dockerfile
        image: "hello-handler:latest"
        env_file:
            - ./config/express-common.env
        labels:
            ca.mcgill.cim.bach.atp.handler: enable
    ml-preprocessor:
        build:
            context: ./machine_learning
            dockerfile: Dockerfile
        image: "ml-preprocessor:latest"
        labels:
            ca.mcgill.cim.bach.atp.preprocessor: 1
            ca.mcgill.cim.bach.atp.port: 5000
    tts-handler:
        build:
            context: ./tts-handler
            dockerfile: Dockerfile
        image: "tts-handler:latest"
        env_file:
            - ./config/express-common.env
        labels:
            ca.mcgill.cim.bach.atp.handler: enable
        volumes:
            - sc-store:/tmp/sc-store

volumes:
    sc-store:
