## docker compose to run image website
services:
  image-unicorn-cim-mcgill-ca:
    image: nginx:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.image-unicorn.rule=Host(`unicorn.cim.mcgill.ca`) && PathPrefix(`/image`)"
      - "traefik.http.routers.image-unicorn.tls.certresolver=myresolver"
      - "traefik.http.middlewares.image-unicorn.stripprefix.prefixes=/image"
      - "traefik.http.routers.image-unicorn.middlewares=image-unicorn@docker"
      - traefik.docker.network=traefik
    environment:
      - SERVER_NAME=unicorn.cim.mcgill.ca
    volumes:
      # Following volume mounts are used only by the IMAGE project's website, not required for IMAGE server 
      - ./IMAGE-website/html:/var/www/html:ro
      - ./IMAGE-website/image.conf:/etc/nginx/templates/image.conf.template:ro
      - ./IMAGE-website/passwords:/etc/nginx/passwords
      - ./resources/current:/var/www/resources:ro
      - website-logs:/var/log/nginx
    depends_on:
      - orchestrator
    networks:
      - traefik
      - default

  goaccess:
    container_name: image-goaccess
    image: allinurl/goaccess:1.9.2
    restart: unless-stopped
    command: /srv/logs/image-a11y-mcgill-ca-access.log --log-format=COMBINED --date-format='%d/%b/%Y' --time-format='%T' --no-global-config --real-time-html -o /srv/report/report.html --persist --restore
    volumes:
      - website-logs:/srv/logs:ro
      - ./goaccess_report:/srv/report

# override gpu selection on test environment
  semantic-segmentation:
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['1']
            capabilities: ["gpu", "utility", "compute"]

  depth-map-generator:
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: ["gpu", "utility", "compute"]

  action-recognition:
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: ["gpu", "utility", "compute"]

  object-detection:
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: ["gpu", "utility", "compute"]

  espnet-tts:
    deploy:
      resources:
        reservations:
            devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: ["gpu", "utility", "compute"]

  espnet-tts-fr:
    deploy:
      resources:
        reservations:
            devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: ["gpu", "utility", "compute"]

  multilang-support:
    deploy:
      resources:
        reservations:
            devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: ["gpu", "utility", "compute"]

  monarch-link-app:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monarch-link-app.rule=Host(`unicorn.cim.mcgill.ca`) && PathPrefix(`/image/monarch`)"
      - "traefik.http.middlewares.monarch-link-app-stripprefix.stripprefix.prefixes=/image/monarch"
      - "traefik.http.routers.monarch-link-app.middlewares=monarch-link-app-stripprefix@docker"
      - "traefik.http.routers.monarch-link-app.tls.certresolver=myresolver"
      - traefik.docker.network=traefik
    environment:
      - SERVER_NAME=unicorn.cim.mcgill.ca

  tat:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tat.rule=Host(`unicorn.cim.mcgill.ca`) && PathPrefix(`/image/tat`)"
      - "traefik.http.middlewares.tat-stripprefix.stripprefix.prefixes=/image/tat"
      - "traefik.http.routers.tat.middlewares=tat-stripprefix@docker"
      - "traefik.http.routers.tat.tls.certresolver=myresolver"
      - traefik.docker.network=traefik
    environment:
      - SERVER_NAME=unicorn.cim.mcgill.ca